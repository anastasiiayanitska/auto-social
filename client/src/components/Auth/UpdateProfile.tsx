import React, { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { updateUser, fetchUser } from "../../store/authSlice";
import { RootState, AppDispatch } from "../../store/store";
import { RegisterData } from "../../types/auth";
import { useNavigate } from "react-router-dom";

const UpdateProfile = () => {
  const dispatch = useDispatch<AppDispatch>();
  const navigate = useNavigate();
  const { user, loading, error } = useSelector(
    (state: RootState) => state.auth
  );
  const [authChecking, setAuthChecking] = useState(true);

  // –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Å—Ç–µ–π—Ç—É —Ñ–æ—Ä–º–∏
  const [formData, setFormData] = useState<RegisterData>({
    username: "",
    email: "",
    password: "",
    avatar: null,
    firstName: "",
    lastName: "",
    bio: "",
    location: "",
    phoneNumber: "",
    website: "",
  });

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    console.log("–ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", user);
    const token = localStorage.getItem("token");

    if (!token) {
      setAuthChecking(false);
      return;
    }

    if (!user) {
      dispatch(fetchUser())
        .unwrap()
        .then((userData) => {
          console.log("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–∏–π", userData);
        })
        .catch((err) => {
          console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", err);
        })
        .finally(() => {
          setAuthChecking(false);
        });
    } else {
      setAuthChecking(false);
    }
  }, [dispatch, user]);

  // –ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏ –¥–∞–Ω–∏–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è
  useEffect(() => {
    if (user) {
      setFormData((prev) => ({
        ...prev,
        username: user.username || "",
        email: user.email || "",
        // –ü–∞—Ä–æ–ª—å –∑–∞–ª–∏—à–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–º –∑ –º—ñ—Ä–∫—É–≤–∞–Ω—å –±–µ–∑–ø–µ–∫–∏
        password: "",
        firstName: user.firstName || "",
        lastName: user.lastName || "",
        bio: user.bio || "",
        location: user.location || "",
        phoneNumber: user.phoneNumber || "",
        website: user.website || "",
      }));
    }
  }, [user]);

  // –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω –ø–æ–ª—ñ–≤ —Ñ–æ—Ä–º–∏
  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value, files } = e.target;

    if (name === "avatar" && files) {
      setFormData((prev) => ({ ...prev, avatar: files[0] }));
    } else {
      setFormData((prev) => ({ ...prev, [name]: value }));
    }
  };

  // –û–±—Ä–æ–±–Ω–∏–∫ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º–∏
  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    console.log("–°—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:", user._id);
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –π–æ–≥–æ ID
    if (!user || !user._id) {
      console.error(
        "‚ùå –ù–µ–º–æ–∂–ª–∏–≤–æ –æ–Ω–æ–≤–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å: –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π"
      );
      return;
    }

    console.log("üì§ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é:", formData);

    dispatch(
      updateUser({
        userId: user._id,
        userData: formData,
      })
    )
      .unwrap()
      .then(() => {
        return dispatch(fetchUser()).unwrap(); // ‚ö° –î–æ–¥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      })
      .then(() => {
        navigate("/me");
      })
      .catch((err) => {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é:", err);
      });
  };

  // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
  if (authChecking) {
    return <div className="loading">–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó...</div>;
  }

  // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
  if (!user) {
    return (
      <div className="error-container">
        <h2>–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó</h2>
        <p>–î–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—å</p>
        <button
          onClick={() => {
            navigate("/login");
          }}
        >
          –£–≤—ñ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
        </button>
      </div>
    );
  }

  // –û—Å–Ω–æ–≤–Ω–∏–π —Ä–µ–Ω–¥–µ—Ä —Ñ–æ—Ä–º–∏
  return (
    <div className="update-profile-container">
      <h2>–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é</h2>
      <form onSubmit={handleSubmit}>
        <div className="form-group">
          <input
            type="text"
            name="username"
            placeholder="–ü—Å–µ–≤–¥–æ–Ω—ñ–º"
            value={formData.username}
            onChange={handleChange}
          />
          <input
            type="email"
            name="email"
            placeholder="Email"
            value={formData.email}
            onChange={handleChange}
          />
          <input
            type="password"
            name="password"
            placeholder="–ü–∞—Ä–æ–ª—å"
            value={formData.password}
            onChange={handleChange}
          />
          <input
            type="text"
            name="firstName"
            placeholder="–Ü–º'—è"
            value={formData.firstName}
            onChange={handleChange}
          />
          <input
            type="text"
            name="lastName"
            placeholder="–ø—Ä–∏–∑–≤—ñ—â–µ"
            value={formData.lastName}
            onChange={handleChange}
          />
          <input
            type="text"
            name="bio"
            placeholder="bio"
            value={formData.bio}
            onChange={handleChange}
          />
          <input
            type="text"
            name="location"
            placeholder="location"
            value={formData.location}
            onChange={handleChange}
          />
          <input
            type="number"
            name="phoneNumber"
            placeholder="phone"
            value={formData.phoneNumber}
            onChange={handleChange}
          />
          <input
            type="text"
            name="website"
            placeholder="web"
            value={formData.website}
            onChange={handleChange}
          />
          <input type="file" name="avatar" onChange={handleChange} />
        </div>

        <button type="submit" disabled={loading}>
          {loading ? "–û–Ω–æ–≤–ª–µ–Ω–Ω—è..." : "–û–Ω–æ–≤–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å"}
        </button>

        {error && <p className="error">{error}</p>}
      </form>
    </div>
  );
};

export default UpdateProfile;
